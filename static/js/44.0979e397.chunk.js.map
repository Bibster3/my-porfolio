{"version":3,"file":"static/js/44.0979e397.chunk.js","mappings":"4JAAO,MAAMA,EACTC,WAAAA,GAAkD,IAAtCC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBAC7BI,KAAKC,OAASN,EACdK,KAAKE,KAAOH,CAChB,ECJG,MCCMI,EAAQ,CACjBC,OAAQ,0BACRC,eAAe,EACfC,gBDJ4BC,MAC5B,GAA4B,qBAAjBC,aAEX,MAAO,CACHC,IAAMC,GAAQC,QAAQC,QAAQJ,aAAaK,QAAQH,IACnDI,IAAKA,CAACJ,EAAKK,IAAUJ,QAAQC,QAAQJ,aAAaQ,QAAQN,EAAKK,IAC/DE,OAASP,GAAQC,QAAQC,QAAQJ,aAAaU,WAAWR,IAC5D,ECHgBH,ICJRY,EAAgBC,GACpBA,EAGkB,kBAAZA,EACA,CACHC,UAAWD,GAIQ,oBAAvBA,EAAQE,WACDF,EAEJ,CAAC,EAXG,CAAC,ECAHG,EAAWC,eAAOC,EAAKC,GAAuB,IAAjBC,EAAO/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAMgC,QAAiBC,MAAM1B,EAAMC,OAASqB,EAAK,CAC7CK,OAAQ,OACRH,UACAI,KAAML,IAEJM,QAAgBJ,EAAS1B,OACzB+B,EAAiB,IAAIxC,EAAsBmC,EAAS3B,OAAQ+B,GAClE,GAAIJ,EAASM,GACT,OAAOD,EAEX,MAAMA,CACV,ECdaE,EAAiBA,CAACd,EAAWe,EAAWC,KACjD,IAAKhB,GAAkC,kBAAdA,EACrB,KAAM,gFAEV,IAAKe,GAAkC,kBAAdA,EACrB,KAAM,wEAEV,IAAKC,GAAoC,kBAAfA,EACtB,KAAM,kFACV,ECTSC,EAAcC,GAChBA,EAAUC,YAAcD,EAAUE,WAA4C,IAA/BF,EAAUE,UAAU5C,OCAjE6C,EAAgBA,IAClB,IAAIjD,EAAsB,IAAK,oCCK7BkD,EAAyBA,CAACvB,EAASwB,KAC5C,GAPyBxB,KACjBA,EAAQyB,MAAMhD,SAAWuB,EAAQ0B,cAMrCC,CAAoB3B,GACpB,OAAO,ECTwB4B,EAACH,EAAMC,KAC1C,IAAKG,MAAMC,QAAQL,GACf,KAAM,wCAEV,GAA6B,kBAAlBC,EACP,KAAM,gDACV,EDIAE,CAAwB5B,EAAQyB,KAAMzB,EAAQ0B,eAC9C,MAAM/B,GAPQW,EAOSkB,EAPHO,EAOW/B,EAAQ0B,cANhCpB,aAAgB0B,SAAW1B,EAAKjB,IAAI0C,GAAQzB,EAAKyB,IAD3CE,IAAC3B,EAAMyB,EAQpB,MAAqB,kBAAVpC,GAEJK,EAAQyB,KAAKS,SAASvC,EAAM,EEb1BwC,EAAoBA,IACtB,IAAI9D,EAAsB,IAAK,aCG7B+D,EAAiBhC,MAAOiC,EAAWrC,EAASsC,KACrD,IAAKtC,EAAQuC,WAAaD,EACtB,OAAO,ECPwBE,EAACD,EAAUE,KAC9C,GAAwB,kBAAbF,GAAyBA,EAAW,EAC3C,KAAM,qDAEV,GAAIE,GAAoB,kBAAPA,EACb,KAAM,+CACV,EDGAD,CAAwBxC,EAAQuC,SAAUvC,EAAQyC,IAClD,MAAMA,EAAKzC,EAAQyC,IAAMJ,EACnBK,OAVUtC,OAAOqC,EAAIF,EAAUD,KACrC,MAAMK,EAAWC,aAAcN,EAAQjD,IAAIoD,IAAQ,GACnD,OAAOF,EAAWM,KAAKC,MAAQH,CAAQ,EAQhBI,CAAYN,EAAIzC,EAAQuC,SAAUD,GACzD,OAAII,EAAW,UAGTJ,EAAQ5C,IAAI+C,EAAII,KAAKC,MAAM5C,aAC1B,EAAK,EEfH8C,EAAiBA,IACnB,IAAI3E,EAAsB,IAAK,qBCG1C,ECcoB+B,MAAOY,EAAWC,EAAYgC,EAAgBjD,KAC9D,MAAMkD,EAAOnD,EAAaC,GACpBC,EAAYiD,EAAKjD,WAAalB,EAAMkB,UACpChB,EAAgBiE,EAAKjE,eAAiBF,EAAME,cAC5CC,EAAkBgE,EAAKhE,iBAAmBH,EAAMG,gBAChDiE,EAAY,IAAKpE,EAAMoE,aAAcD,EAAKC,WAC1CC,EAAY,IAAKrE,EAAMqE,aAAcF,EAAKE,WAChD,GAAInE,GAAiBiC,EAAWC,WAC5B,OAAO5B,QAAQ8D,OAAO/B,KAI1B,GAFAP,EAAed,EAAWe,EAAWC,GC7BFgC,KAEnC,GAAIA,GAAgD,oBAA9BA,EAAe/C,WACjC,KAAM,yFACV,ED0BAoD,CAAuBL,GACnBA,GAAkB1B,EAAuB4B,EAAWF,GACpD,OAAO1D,QAAQ8D,OAAOlB,KAE1B,SAAUC,EAAemB,SAASC,SAAUJ,EAAWlE,GACnD,OAAOK,QAAQ8D,OAAOL,KAE1B,MAAMxB,EAAS,CACXiC,YAAa,QACbC,QAASzD,EACT0D,WAAY3C,EACZ4C,YAAa3C,EACb4C,gBAAiBZ,GAErB,OAAO9C,EAAS,uBAAwB2D,KAAKC,UAAUvC,GAAS,CAC5D,eAAgB,oBAClB,E,aE3CN,MAoGA,EApG0BwC,KACxB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCpC,KAAM,GACNqC,MAAO,GACPC,MAAO,GACPzD,QAAS,MAGJ/B,EAAQyF,IAAaH,EAAAA,EAAAA,UAAS,IAK/BI,EAAgBC,IACpBN,EAAY,IAAKD,EAAU,CAACO,EAAEC,OAAO1C,MAAOyC,EAAEC,OAAO9E,OAAQ,EAgC/D,OACE+E,EAAAA,EAAAA,KAAA,WAASjC,GAAG,UAAUkC,UAAU,oCAAmCC,UACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,gBAClEC,EAAAA,EAAAA,MAAA,QAAMC,SAjCUN,IAGpB,GAFAA,EAAEO,iBARkBX,EAUFH,EAASG,OAT3B,6BAA6BY,KAAKZ,GAWhC,YADAE,EAAU,uCAXQF,MActB,MAAMa,EAAY,kBACdC,EAAa,mBACbjF,EAAY,oBAMdkF,EAAaF,EAAWC,EAAYjB,EAAUhE,GAC/CmF,MACEC,IACCC,QAAQC,IAAI,qBAAiBF,GAC7Bf,EAAU,qCACVJ,EAAY,CAAEnC,KAAM,GAAIqC,MAAO,GAAIC,MAAO,GAAIzD,QAAS,IAAK,IAE7D4E,IACCF,QAAQG,MAAM,wBAAoBD,GAClClB,EAAU,mDAA8C,GAE3D,EAOmCK,UAAU,YAAWC,SAAA,EACjDF,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACL3D,KAAK,OACL4D,YAAY,YACZhG,MAAOsE,EAASlC,KAChB6D,SAAUrB,EACVsB,UAAQ,EACRlB,UAAU,iEAEZD,EAAAA,EAAAA,KAAA,SACEgB,KAAK,QACL3D,KAAK,QACL4D,YAAY,aACZhG,MAAOsE,EAASG,MAChBwB,SAAUrB,EACVsB,UAAQ,EACRlB,UAAU,iEAEZD,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACL3D,KAAK,QACL4D,YAAY,UACZhG,MAAOsE,EAASI,MAChBuB,SAAUrB,EACVsB,UAAQ,EACRlB,UAAU,iEAEZD,EAAAA,EAAAA,KAAA,YACE3C,KAAK,UACL+D,KAAM,EACNH,YAAY,eACZhG,MAAOsE,EAASrD,QAChBgF,SAAUrB,EACVsB,UAAQ,EACRlB,UAAU,iEAEZD,EAAAA,EAAAA,KAAA,UACEgB,KAAK,SACLf,UAAU,uEAAsEC,SACjF,iBAGA/F,IAAU6F,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iCAAgCC,SAAE/F,WAGtD,C","sources":["../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","components/Contact.tsx"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import React, { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\n\nconst Contact: React.FC = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    title: \"\",\n    message: \"\",\n  });\n\n  const [status, setStatus] = useState(\"\");\n\n  const isEmailValid = (email: string) =>\n    /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!isEmailValid(formData.email)) {\n      setStatus(\"Please enter a valid email address.\");\n      return;\n    }\n  const serviceId = \"service_t0kzt2w\";\nconst templateId = \"template_jn5md0l\";\nconst publicKey = \"mFP23VlY-qjDoxFr1\";\n\nif (!serviceId || !templateId || !publicKey) {\n  throw new Error(\"Missing EmailJS environment variables.\");\n}\n\n    emailjs.send(serviceId, templateId, formData, publicKey)\n  .then(\n    (res: any) => {\n      console.log(\"✅ Email sent:\", res);\n      setStatus(\"✅ Message sent successfully!\");\n      setFormData({ name: \"\", email: \"\", title: \"\", message: \"\" })\n    },\n    (err: any) => {\n      console.error(\"❌ EmailJS error:\", err);\n      setStatus(\"❌ Failed to send message. Please try again.\");\n    }\n  );\n  };\n\n  return (\n    <section id=\"contact\" className=\"bg-gray-900 text-white py-16 px-4\">\n      <div className=\"max-w-2xl mx-auto\">\n        <h2 className=\"text-3xl font-bold text-pink-400 mb-8 text-center\">Contact Me</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n            className=\"w-full px-4 py-2 rounded bg-gray-800 border border-pink-500\"\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n            className=\"w-full px-4 py-2 rounded bg-gray-800 border border-pink-500\"\n          />\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Subject\"\n            value={formData.title}\n            onChange={handleChange}\n            required\n            className=\"w-full px-4 py-2 rounded bg-gray-800 border border-pink-500\"\n          />\n          <textarea\n            name=\"message\"\n            rows={5}\n            placeholder=\"Your Message\"\n            value={formData.message}\n            onChange={handleChange}\n            required\n            className=\"w-full px-4 py-2 rounded bg-gray-800 border border-pink-500\"\n          />\n          <button\n            type=\"submit\"\n            className=\"bg-pink-500 hover:bg-pink-600 text-white font-bold py-2 px-6 rounded\"\n          >\n            Send Message\n          </button>\n          {status && <p className=\"mt-2 text-center text-pink-300\">{status}</p>}\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;"],"names":["EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","name","FormData","getValue","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","id","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","templateParams","opts","blockList","limitRate","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Contact","formData","setFormData","useState","email","title","setStatus","handleChange","e","target","_jsx","className","children","_jsxs","onSubmit","preventDefault","test","serviceId","templateId","emailjs","then","res","console","log","err","error","type","placeholder","onChange","required","rows"],"sourceRoot":""}