{"version":3,"file":"static/js/903.a46ba37b.chunk.js","mappings":"uKAEA,MA8BA,EA9BoBA,IAAmD,IAAlD,MAAEC,EAAK,YAAEC,EAAW,UAAEC,EAAS,UAAEC,GAAWJ,EAC7D,OACIK,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4EAA2EC,SAAA,EACtFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,4CAA2CC,SAAEN,KAC3DO,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAEL,KACnCM,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0CAAyCC,UACpDC,EAAAA,EAAAA,KAAA,UAAQC,IAAKN,EAAWF,MAAOA,EAAOK,UAAU,oDAAoDI,iBAAe,OAEvHL,EAAAA,EAAAA,MAAA,OAAKC,UAAY,iBAAgBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KACJG,KAAMR,EACNS,OAAO,SACPC,IAAI,sBACJP,UAAU,wFAAuFC,SAClG,mBAGIC,EAAAA,EAAAA,KAAA,KACHG,KAAMP,EACNQ,OAAO,SACPC,IAAI,sBACJP,UAAU,wFAAuFC,SAClG,wBAIO,EC2Cd,EAnEkBO,KACd,MAgBKC,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,IAC/CC,GAAcC,EAAAA,EAAAA,QAAO,IAGrBC,EAAkBC,IACpBA,EAAQC,SAASC,IACb,GAAIA,EAAMC,eAAgB,CACtB,MAAMC,EAAeF,EAAMX,OAAOc,aAAa,cAC/CV,GAAoBW,GAAwB,IAAIA,EAAqBC,OAAOH,KAChF,IACF,EAiBN,OAdAI,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAW,IAAIC,qBAAqBX,EAAgB,CACtDY,KAAM,KACNC,WAAY,MACZC,UAAW,KAOf,OAJAhB,EAAYiB,QAAQb,SAASc,IACzBN,EAASO,QAAQD,EAAI,IAGlB,IAAMN,EAASQ,YAAY,GACnC,KAGA9B,EAAAA,EAAAA,KAAA,WAAS+B,GAAG,YAAWhC,UACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SA9CpB,CACb,CACIN,MAAO,cACPC,YAAa,0ZACbC,UAAW,0CACXC,UAAW,2CAEhB,CACKH,MAAO,aACPC,YAAa,0QACbC,UAAW,yCACXC,UAAW,2CAoCGoC,KAAI,CAACC,EAASC,KACpBlC,EAAAA,EAAAA,KAAA,OAAiB4B,IAAMA,GAASlB,EAAYiB,QAAQO,GAASN,EAAM,aAAYM,EAAMnC,SAChFQ,EAAgB4B,SAASD,KACtBlC,EAAAA,EAAAA,KAACoC,EAAW,CAER3C,MAAOwC,EAAQxC,MACfC,YAAauC,EAAQvC,YACrBC,UAAWsC,EAAQtC,UACnBC,UAAWqC,EAAQrC,WAJdsC,IAHPA,UAcZ,C","sources":["components/ProjectCard.jsx","components/Portfolio.jsx"],"sourcesContent":["import React from 'react';\n\nconst ProjectCard = ({ title, description, iframeUrl, githubUrl }) => {\n    return (\n        <div className=\"project-card max-w-4xl mx-auto bg-gray-900 rounded-xl shadow-lg p-6 mb-10\">\n            <h2 className=\"text-2xl font-semibold text-pink-400 mb-2\">{title}</h2>\n            <p className=\"text-gray-300 mb-4\">{description}</p>\n            <div className=\"project-iframe w-full aspect-video mb-4\">\n                <iframe src={iframeUrl} title={title} className=\"w-full h-full border-2 border-gray-700 rounded-md\" allowFullScreen />\n            </div>\n            <div className = \"flex space-x-4\">\n            <a\n        href={iframeUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"inline-block bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded-md transition\"\n      >\n        Visit website \n      </a>\n           <a\n        href={githubUrl}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"inline-block bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded-md transition\"\n      >\n        View on GitHub\n      </a>\n      </div>\n        </div>\n    );\n};\n\nexport default ProjectCard;","import React, { useRef, useEffect, useState } from 'react';\n\nimport ProjectCard from './ProjectCard';\n\nconst Portfolio = () => {\n    const projects = [\n        {\n            title: 'CalorieMate',\n            description: 'CalorieMate is a responsive web application designed for tracking nutritional intake. It features a user-friendly interface built with HTML, CSS, and JavaScript, ensuring seamless navigation and interactive functionality. Hosted on GitHub Pages, it showcases skills in frontend development, responsive design, and UI/UX principles, making it easy to monitor and manage daily calorie consumption effectively.',\n            iframeUrl: 'https://bibster3.github.io/CalorieMate/', \n            githubUrl: 'https://github.com/Bibster3/CalorieMate'\n        },\n       {\n            title: 'WeatherApp',\n            description: 'WeatherApp is a modern web application designed to keep you informed about the weather conditions in your area and beyond. Built with React, TypeScript, and Tailwind CSS, Weatherly offers a seamless user experience with real-time updates and intuitive navigation.',\n            iframeUrl: 'https://bibster3.github.io/WeatherApp/', \n            githubUrl: 'https://github.com/Bibster3/WeatherApp'\n        }\n        //more projects to be added */\n    ];\n\n  const [visibleProjects, setVisibleProjects] = useState([]);\n    const projectRefs = useRef([]);\n\n    // IntersectionObserver callback function to check if the project is in view\n    const onIntersection = (entries) => {\n        entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n                const projectIndex = entry.target.getAttribute('data-index');\n                setVisibleProjects((prevVisibleProjects) => [...prevVisibleProjects, Number(projectIndex)]);\n            }\n        });\n    };\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(onIntersection, {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.1 // Adjust as needed based on your layout and visibility needs\n        });\n\n        projectRefs.current.forEach((ref) => {\n            observer.observe(ref);\n        });\n\n        return () => observer.disconnect();\n    }, []);\n\n    return (\n       <section id=\"portfolio\">\n        <div className=\"portfolio\">\n            <div className=\"project-list\">\n                {projects.map((project, index) => (\n                    <div key={index} ref={(ref) => (projectRefs.current[index] = ref)} data-index={index}>\n                        {visibleProjects.includes(index) && (\n                            <ProjectCard\n                                key={index}\n                                title={project.title}\n                                description={project.description}\n                                iframeUrl={project.iframeUrl}\n                                githubUrl={project.githubUrl}\n                            />\n                        )}\n                    </div>\n                ))}\n            </div>\n        </div>\n        </section>\n    );\n};\n\nexport default Portfolio;"],"names":["_ref","title","description","iframeUrl","githubUrl","_jsxs","className","children","_jsx","src","allowFullScreen","href","target","rel","Portfolio","visibleProjects","setVisibleProjects","useState","projectRefs","useRef","onIntersection","entries","forEach","entry","isIntersecting","projectIndex","getAttribute","prevVisibleProjects","Number","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","ref","observe","disconnect","id","map","project","index","includes","ProjectCard"],"sourceRoot":""}